QUEUE Like Syntax: 

private Queue<Integer> window = new LinkedList<Integer>();

enquue - add
dequeue - remove
size - size
toArray - to array
get (index)
get - get firts
peek - see but does not remove
ADD:
boolean	add(E e)
Appends the specified element to the end of this list.

boolean	addAll(Collection<? extends E> c)
Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.

void	add(int index, E element)
Inserts the specified element at the specified position in this list.

void	addFirst(E e)
Inserts the specified element at the beginning of this list.

void	addLast(E e)
Appends the specified element to the end of this list.


GET:
E	get(int index)
Returns the element at the specified position in this list.

E	getFirst()
Returns the first element in this list.

E	getLast()
Returns the last element in this list.

void	clear()
Removes all of the elements from this list.




Contains:

boolean	contains(Object o)
Returns true if this list contains the specified element.


Index Of:
int	indexOf(Object o)
Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element.

int	lastIndexOf(Object o)
Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element.

no need : just use for(Obj n: list){}
ListIterator<E>	listIterator(int index)
Returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.

E	remove()
Retrieves and removes the head (first element) of this list.
E	remove(int index)
Removes the element at the specified position in this list.
boolean	remove(Object o)
E	removeFirst()
Removes and returns the first element from this list.
boolean	removeFirstOccurrence(Object o)
Removes the first occurrence of the specified element in this list (when traversing the list from head to tail).
E	removeLast()
Removes and returns the last element from this list.

//STACK:
E	pop()
Pops an element from the stack represented by this list.

void	push(E e)
Pushes an element onto the stack represented by this list.



peek()
Retrieves, but does not remove, the head (first element) of this list.
E	peekFirst()
Retrieves, but does not remove, the first element of this list, or returns null if this list is empty.
E	peekLast()
Retrieves, but does not remove, the last element of this list, or returns null if this list is empty.
E	poll()
Retrieves and removes the head (first element) of this list.
E	